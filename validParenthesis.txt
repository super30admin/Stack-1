// Time Complexity : O(n) 
// Space Complexity : O(n) for recursive stack
// Did this code successfully run on Leetcode : yes




class Solution {
    public boolean isValid(String s) 
    {
        Stack<Character> st = new Stack<Character>();
        
        for(int i=0;i<s.length();i++)
        {
            char ch = s.charAt(i);
            if(ch == '{' || ch == '(' || ch == '[')
            {
                st.push(ch);
            }
            else if(ch == '}' && (st.empty()== false) && st.peek()=='{')
            {
                st.pop();
            }
            else if(ch == ')' && (st.empty()== false) && st.peek()=='(')
            {
                st.pop();
            }
            else if(ch == ']' && (st.empty()== false) && st.peek()=='[')
            {
                st.pop();
            }
            else
            {
                return false;
            }
        }
        if(st.empty())
        {
            return true;
        }
        return false;
        
    }
}